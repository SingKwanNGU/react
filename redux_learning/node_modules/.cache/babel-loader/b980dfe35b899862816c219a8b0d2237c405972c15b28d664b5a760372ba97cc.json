{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count';\n//引入actionCreator\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action_creator';\n//引入connect用于连接UI组件与redux\nimport { connect } from 'react-redux';\n\n/* \r\n    1.mapStateToProps函数返回的是一个对象\r\n    2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————状态\r\n    3.mapStateToProps用于传递状态\r\n */\nfunction mapStateToProps(state) {\n  return {\n    count: state\n  };\n}\n\n/* \r\n    1.mapDispatchToProps函数返回的是一个对象\r\n    2.返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————操作状态的方法\r\n    3.mapStateToProps用于传递操作状态的方法\r\n*/\n\nfunction mapDispatchToProps(dispatch) {\n  //通知redux执行加法\n  return {\n    jia: number => dispatch(createIncrementAction(number)),\n    jian: number => dispatch(createDecrementAction(number)),\n    asyncJia: (number, time) => dispatch(createIncrementAsyncAction(number, time))\n  };\n}\n\n//使用connetct()()创建并暴露一个Count的容器组件\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"names":["CountUI","createIncrementAction","createDecrementAction","createIncrementAsyncAction","connect","mapStateToProps","state","count","mapDispatchToProps","dispatch","jia","number","jian","asyncJia","time"],"sources":["E:/redux_learning/src/containers/Count/index.jsx"],"sourcesContent":["//引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n//引入actionCreator\r\nimport {createIncrementAction,\r\n    createDecrementAction,createIncrementAsyncAction} from '../../redux/count_action_creator'\r\n//引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n/* \r\n    1.mapStateToProps函数返回的是一个对象\r\n    2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————状态\r\n    3.mapStateToProps用于传递状态\r\n */\r\nfunction mapStateToProps(state){\r\n    return {count:state}\r\n}\r\n\r\n/* \r\n    1.mapDispatchToProps函数返回的是一个对象\r\n    2.返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————操作状态的方法\r\n    3.mapStateToProps用于传递操作状态的方法\r\n*/\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    //通知redux执行加法\r\n    return {\r\n        jia:(number)=>dispatch(createIncrementAction(number)),\r\n        jian:(number)=>dispatch(createDecrementAction(number)),\r\n        asyncJia:(number,time)=>dispatch(createIncrementAsyncAction(number,time))\r\n    }\r\n}\r\n\r\n//使用connetct()()创建并暴露一个Count的容器组件\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CountUI)"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C;AACA,SAAQC,qBAAqB,EACzBC,qBAAqB,EAACC,0BAA0B,QAAO,kCAAkC;AAC7F;AACA,SAAQC,OAAO,QAAO,aAAa;;AAGnC;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,KAAK,EAAC;EAC3B,OAAO;IAACC,KAAK,EAACD;EAAK,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASE,kBAAkBA,CAACC,QAAQ,EAAC;EACjC;EACA,OAAO;IACHC,GAAG,EAAEC,MAAM,IAAGF,QAAQ,CAACR,qBAAqB,CAACU,MAAM,CAAC,CAAC;IACrDC,IAAI,EAAED,MAAM,IAAGF,QAAQ,CAACP,qBAAqB,CAACS,MAAM,CAAC,CAAC;IACtDE,QAAQ,EAACA,CAACF,MAAM,EAACG,IAAI,KAAGL,QAAQ,CAACN,0BAA0B,CAACQ,MAAM,EAACG,IAAI,CAAC;EAC5E,CAAC;AACL;;AAEA;AACA,eAAeV,OAAO,CAACC,eAAe,EAACG,kBAAkB,CAAC,CAACR,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}