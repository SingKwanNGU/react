{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count';\n\n//引入connect用于连接UI组件与redux\nimport { connect } from 'react-redux';\n\n//a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————状态\nfunction a(state) {\n  return {\n    count: state\n  };\n}\n\n//b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————操作状态的方法\nfunction b() {\n  //通知redux执行加法\n  return {\n    jia: () => {\n      console.log(1);\n    }\n  };\n}\n\n//使用connetct()()创建并暴露一个Count的容器组件\nexport default connect(a, b)(CountUI);","map":{"version":3,"names":["CountUI","connect","a","state","count","b","jia","console","log"],"sources":["E:/redux_learning/src/containers/Count/index.jsx"],"sourcesContent":["//引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n\r\n//引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n//a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————状态\r\nfunction a(state){\r\n    return {count:state}\r\n}\r\n\r\n//b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value————操作状态的方法\r\nfunction b(){\r\n    //通知redux执行加法\r\n    return {jia:()=>{console.log(1);}}\r\n}\r\n\r\n//使用connetct()()创建并暴露一个Count的容器组件\r\nexport default connect(a,b)(CountUI)"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,wBAAwB;;AAE5C;AACA,SAAQC,OAAO,QAAO,aAAa;;AAGnC;AACA,SAASC,CAACA,CAACC,KAAK,EAAC;EACb,OAAO;IAACC,KAAK,EAACD;EAAK,CAAC;AACxB;;AAEA;AACA,SAASE,CAACA,CAAA,EAAE;EACR;EACA,OAAO;IAACC,GAAG,EAACA,CAAA,KAAI;MAACC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAAC;EAAC,CAAC;AACtC;;AAEA;AACA,eAAeP,OAAO,CAACC,CAAC,EAACG,CAAC,CAAC,CAACL,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}