{"ast":null,"code":"/*\r\n   该文件专门用于暴露一个store对象,整个应用只有一个store对象，相当于一个全局变量对象。\r\n*/\n//引入createStore,专门用于创建redux中最为核心的store对象 目前该方法已弃用！！！\n// import {createStore} from 'redux' 改为下面写法\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers } from \"redux\";\n//引入allRedu\n//引入thunk,用于支持异步action  新版的reduxjs/toolkit里面整合了redux-thunk\nimport thunk from \"redux-thunk\";\n//引入redux-devtools-extension\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n//暴露store  \nexport default createStore(allReducers, composeWithDevTools(applyMiddleware(thunk)));\n\n//官网教程写法\n/* import { configureStore } from '@reduxjs/toolkit'\r\n\r\nexport default configureStore({\r\n  reducer: {}\r\n}) */","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","allReducers"],"sources":["E:/redux_learning/src/redux/store.js"],"sourcesContent":["/*\r\n   该文件专门用于暴露一个store对象,整个应用只有一个store对象，相当于一个全局变量对象。\r\n*/ \r\n//引入createStore,专门用于创建redux中最为核心的store对象 目前该方法已弃用！！！\r\n// import {createStore} from 'redux' 改为下面写法\r\nimport { legacy_createStore as createStore,applyMiddleware,combineReducers } from \"redux\";\r\n//引入allRedu\r\n//引入thunk,用于支持异步action  新版的reduxjs/toolkit里面整合了redux-thunk\r\nimport thunk from \"redux-thunk\";\r\n//引入redux-devtools-extension\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\n//暴露store  \r\nexport default createStore(allReducers,composeWithDevTools(applyMiddleware(thunk)));\r\n\r\n\r\n\r\n//官网教程写法\r\n/* import { configureStore } from '@reduxjs/toolkit'\r\n\r\nexport default configureStore({\r\n  reducer: {}\r\n}) */\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,IAAIC,WAAW,EAACC,eAAe,EAACC,eAAe,QAAQ,OAAO;AACzF;AACA;AACA,OAAOC,KAAK,MAAM,aAAa;AAC/B;AACA,SAASC,mBAAmB,QAAQ,0BAA0B;;AAG9D;AACA,eAAeJ,WAAW,CAACK,WAAW,EAACD,mBAAmB,CAACH,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;;AAInF;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}