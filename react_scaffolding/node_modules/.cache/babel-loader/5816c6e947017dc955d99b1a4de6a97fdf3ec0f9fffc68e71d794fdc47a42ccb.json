{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_scaffolding\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\n// import axios from 'axios'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.search = async () => {\n      //获取用户的输入（连续解构赋值写法）\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this;\n      //发送网络请求List更新状态\n      PubSub.publish('searchState', {\n        isFirst: false,\n        isLoading: true\n      });\n      //#region  发送网络请求--使用axios发送\n      /*  axios.get(`/api1/search/users?q=${keyWord}`).then(\r\n           response =>{\r\n             //请求成功后通知List更新状态\r\n             PubSub.publish('searchState',{isLoading:false,users:response.data.items})\r\n             // this.props.updateAppState({isLoading:false,users:response.data.items})\r\n           }, \r\n           error => {\r\n             //请求失败通知List更新状态\r\n             PubSub.publish('searchState',{isLoading:false,err:error.message})\r\n             // this.props.updateAppState({isLoading:false,err:error.message})\r\n           },\r\n       ) */\n      //#endregion\n\n      // 发送网络请求--使用fetch发送（未优化）\n      /*  fetch(`/api1/search/users2?q=${keyWord}`).then(\r\n         res =>{\r\n           console.log('联系服务器成功了');\r\n           return res.json()\r\n         }\r\n       ).then(\r\n         res => {\r\n           console.log('获取数据成功了',res);\r\n         }\r\n       ).catch(\r\n         (err)=>{console.log(err);}\r\n       ) */\n\n      // 发送网络请求--使用fetch发送（优化）\n      try {\n        const res = await fetch(`/api1/search/users2?q=${keyWord}`);\n        const data = await res.json();\n        PubSub.publish('searchState', {\n          isLoading: false,\n          users: data.items\n        });\n        console.log(data);\n      } catch (error) {\n        console.log('请求出错', error);\n        PubSub.publish('searchState', {\n          isLoading: false,\n          err: error.message\n        });\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"Search Github Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"enter the name you search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PubSub","jsxDEV","_jsxDEV","Search","constructor","args","search","keyWordElement","value","keyWord","publish","isFirst","isLoading","res","fetch","data","json","users","items","console","log","error","err","message","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","c","type","placeholder","onClick"],"sources":["E:/react_scaffolding/src/components/Search/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js'\r\n// import axios from 'axios'\r\n\r\nexport default class Search extends Component {\r\n\r\n  search = async()=>{\r\n    //获取用户的输入（连续解构赋值写法）\r\n    const {keyWordElement:{value:keyWord}}=this\r\n    //发送网络请求List更新状态\r\n    PubSub.publish('searchState',{isFirst:false,isLoading:true})\r\n    //#region  发送网络请求--使用axios发送\r\n   /*  axios.get(`/api1/search/users?q=${keyWord}`).then(\r\n        response =>{\r\n          //请求成功后通知List更新状态\r\n          PubSub.publish('searchState',{isLoading:false,users:response.data.items})\r\n          // this.props.updateAppState({isLoading:false,users:response.data.items})\r\n        }, \r\n        error => {\r\n          //请求失败通知List更新状态\r\n          PubSub.publish('searchState',{isLoading:false,err:error.message})\r\n          // this.props.updateAppState({isLoading:false,err:error.message})\r\n        },\r\n    ) */\r\n    //#endregion\r\n    \r\n    // 发送网络请求--使用fetch发送（未优化）\r\n   /*  fetch(`/api1/search/users2?q=${keyWord}`).then(\r\n      res =>{\r\n        console.log('联系服务器成功了');\r\n        return res.json()\r\n      }\r\n    ).then(\r\n      res => {\r\n        console.log('获取数据成功了',res);\r\n      }\r\n    ).catch(\r\n      (err)=>{console.log(err);}\r\n    ) */\r\n\r\n\r\n    // 发送网络请求--使用fetch发送（优化）\r\n    try {\r\n      const res=await fetch(`/api1/search/users2?q=${keyWord}`)\r\n      const data=await res.json()\r\n      PubSub.publish('searchState',{isLoading:false,users:data.items})\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log('请求出错',error);\r\n      PubSub.publish('searchState',{isLoading:false,err:error.message})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className=\"jumbotron\">\r\n            <h3 className=\"jumbotron-heading\">Search Github Users</h3>\r\n            <div>\r\n            <input ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"enter the name you search\" />\r\n            &nbsp;<button onClick={this.search}>Search</button>\r\n            </div>\r\n        </section>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,WAAW;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAE5CC,MAAM,GAAG,YAAS;MAChB;MACA,MAAM;QAACC,cAAc,EAAC;UAACC,KAAK,EAACC;QAAO;MAAC,CAAC,GAAC,IAAI;MAC3C;MACAT,MAAM,CAACU,OAAO,CAAC,aAAa,EAAC;QAACC,OAAO,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC,CAAC;MAC5D;MACD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI;;MAEA;MACD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAGI;MACA,IAAI;QACF,MAAMC,GAAG,GAAC,MAAMC,KAAK,CAAE,yBAAwBL,OAAQ,EAAC,CAAC;QACzD,MAAMM,IAAI,GAAC,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC3BhB,MAAM,CAACU,OAAO,CAAC,aAAa,EAAC;UAACE,SAAS,EAAC,KAAK;UAACK,KAAK,EAACF,IAAI,CAACG;QAAK,CAAC,CAAC;QAChEC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,MAAM,EAACC,KAAK,CAAC;QACzBrB,MAAM,CAACU,OAAO,CAAC,aAAa,EAAC;UAACE,SAAS,EAAC,KAAK;UAACU,GAAG,EAACD,KAAK,CAACE;QAAO,CAAC,CAAC;MACnE;IACF,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACP,oBACItB,OAAA;MAASuB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1BxB,OAAA;QAAIuB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1D5B,OAAA;QAAAwB,QAAA,gBACAxB,OAAA;UAAO6B,GAAG,EAAEC,CAAC,IAAI,IAAI,CAACzB,cAAc,GAAGyB,CAAE;UAACC,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAA2B;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,QAC1F,eAAA5B,OAAA;UAAQiC,OAAO,EAAE,IAAI,CAAC7B,MAAO;UAAAoB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEhB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}