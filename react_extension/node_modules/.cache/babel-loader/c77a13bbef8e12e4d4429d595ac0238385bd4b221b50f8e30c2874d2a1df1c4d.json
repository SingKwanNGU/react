{"ast":null,"code":"import React, { useState, useEffect } from 'react';\n// import ReactDOM from 'react-dom'\nimport { root } from '../../index';\n\n// 类式组件写法： \n/* class Demo extends React.Component {\r\n\r\n    state={count:0}\r\n\r\n    add=()=>{\r\n        // 函数式式的setState\r\n        this.setState(state=>({count:state.count+1}))\r\n    }\r\n\r\n    unmount=()=>{\r\n        //旧版写法：\r\n        // ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n        //新版写法：\r\n        root.unmount();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timer=setInterval(()=>{\r\n            this.setState(state=>({count:state.count+1}))\r\n        },1000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>当前求和为：{this.state.count}</h1>\r\n        <button onClick={this.add}>点我+1</button>\r\n        <button onClick={this.unmount}>删除</button>\r\n      </div>\r\n    )\r\n  }\r\n} */\n\n//函数式组件写法：\n/* function Demo(){\r\n\r\n    const [count,setCount]=useState(0)\r\n    const [name,setName]=useState('tom')\r\n\r\n    function add(){\r\n        // setCount(count+1) 第一种写法\r\n        setCount(count=>count+1) //第二种写法\r\n    }\r\n\r\n    function changeName(){\r\n        // setName('jerry')\r\n        setName( name =>'jerry')\r\n    }\r\n\r\n    function unmount(){\r\n        root.unmount();  \r\n    }\r\n\r\n    //这个方法相当于是componentDidMount和compoentWillUpdata和componentWillUnmount的三者结合\r\n\r\n    useEffect(()=>{\r\n        let timer=setInterval(()=>{\r\n            setCount(count=>count+1)\r\n        },1000)\r\n        return ()=>{\r\n            clearInterval(timer);\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <h2>当前求和为：{count}</h2>\r\n            <h2>我的名字是：{name}</h2>\r\n            <button onClick={add}>点我+1</button>\r\n            <button onClick={changeName}>点我改名</button>\r\n            <button onClick={unmount}>卸载组件</button>\r\n        </div>\r\n    )\r\n} */\n\nexport default Demo;","map":{"version":3,"names":["React","useState","useEffect","root","Demo"],"sources":["E:/react_extension/src/components/3_hooks/index.jsx"],"sourcesContent":["import React, { useState,useEffect} from 'react'\r\n// import ReactDOM from 'react-dom'\r\nimport {root} from '../../index'\r\n\r\n// 类式组件写法： \r\n/* class Demo extends React.Component {\r\n\r\n    state={count:0}\r\n\r\n    add=()=>{\r\n        // 函数式式的setState\r\n        this.setState(state=>({count:state.count+1}))\r\n    }\r\n\r\n    unmount=()=>{\r\n        //旧版写法：\r\n        // ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n        //新版写法：\r\n        root.unmount();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timer=setInterval(()=>{\r\n            this.setState(state=>({count:state.count+1}))\r\n        },1000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>当前求和为：{this.state.count}</h1>\r\n        <button onClick={this.add}>点我+1</button>\r\n        <button onClick={this.unmount}>删除</button>\r\n      </div>\r\n    )\r\n  }\r\n} */\r\n\r\n//函数式组件写法：\r\n/* function Demo(){\r\n\r\n    const [count,setCount]=useState(0)\r\n    const [name,setName]=useState('tom')\r\n\r\n    function add(){\r\n        // setCount(count+1) 第一种写法\r\n        setCount(count=>count+1) //第二种写法\r\n    }\r\n\r\n    function changeName(){\r\n        // setName('jerry')\r\n        setName( name =>'jerry')\r\n    }\r\n\r\n    function unmount(){\r\n        root.unmount();  \r\n    }\r\n\r\n    //这个方法相当于是componentDidMount和compoentWillUpdata和componentWillUnmount的三者结合\r\n\r\n    useEffect(()=>{\r\n        let timer=setInterval(()=>{\r\n            setCount(count=>count+1)\r\n        },1000)\r\n        return ()=>{\r\n            clearInterval(timer);\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <h2>当前求和为：{count}</h2>\r\n            <h2>我的名字是：{name}</h2>\r\n            <button onClick={add}>点我+1</button>\r\n            <button onClick={changeName}>点我改名</button>\r\n            <button onClick={unmount}>卸载组件</button>\r\n        </div>\r\n    )\r\n} */\r\n\r\nexport default Demo"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAChD;AACA,SAAQC,IAAI,QAAO,aAAa;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}