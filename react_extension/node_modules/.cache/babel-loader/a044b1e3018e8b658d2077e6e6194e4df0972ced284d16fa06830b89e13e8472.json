{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_extension\\\\src\\\\components\\\\8_ErrorBoundary\\\\Parent.jsx\";\nimport React, { Component } from 'react';\nimport Child from './Child';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Parent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: '' //用于表示子组件是否产生错误\n    };\n  }\n\n  //当Parent的子组件出现报错的时候，会触发getDerivedStateFromError的调用，并携带错误信息\n  static getDerivedStateFromError(error) {\n    console.log(error);\n    return {\n      hasError: error\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6211\\u662FParent\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), this.state.hasError ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u5F53\\u524D\\u7F51\\u7EDC\\u4E0D\\u7A33\\u5B9A\\uFF0C\\u7A0D\\u540E\\u518D\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Child","jsxDEV","_jsxDEV","Parent","constructor","args","state","hasError","getDerivedStateFromError","error","console","log","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/react_extension/src/components/8_ErrorBoundary/Parent.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n\r\n    state={\r\n        hasError:''//用于表示子组件是否产生错误\r\n    }\r\n\r\n    //当Parent的子组件出现报错的时候，会触发getDerivedStateFromError的调用，并携带错误信息\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n        return {hasError: error}\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>我是Parent组件</h2>\r\n        {this.state.hasError ? <h2>当前网络不稳定，稍后再试</h2> : <Child/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAE1CC,KAAK,GAAC;MACFC,QAAQ,EAAC,EAAE;IACf,CAAC;EAAA;;EAED;EACA,OAAOC,wBAAwBA,CAACC,KAAK,EAAE;IACnCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO;MAACF,QAAQ,EAAEE;IAAK,CAAC;EAC5B;EAEFG,MAAMA,CAAA,EAAG;IACP,oBACEV,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClB,IAAI,CAACX,KAAK,CAACC,QAAQ,gBAAGL,OAAA;QAAAW,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAAGf,OAAA,CAACF,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}