{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_extension\\\\src\\\\components\\\\5_Context\\\\index.jsx\";\nimport React, { Component, createContext } from 'react';\n\n//创建context对象\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext();\nconst {\n  Provider,\n  Consumer\n} = MyContext;\nexport default class A extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: 'tom',\n      age: 18\n    };\n  }\n  render() {\n    const {\n      username,\n      age\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6211\\u662FA\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\u6211\\u7684\\u7528\\u6237\\u540D\\u662F\\uFF1A\", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Provider, {\n        value: {\n          username,\n          age\n        },\n        children: /*#__PURE__*/_jsxDEV(B, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass B extends Component {\n  render() {\n    //对比组件C,因为没有声明接收context，所以获取不了context的内容，只能返回一个空对象，\n    // 而且A与B是父子关系，用props就可以进行传值，没必要用context,context用于祖组件和后代组件通信（隔代通信）\n    console.log(this.context);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6211\\u662FB\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\u6211\\u4ECEA\\u7EC4\\u4EF6\\u63A5\\u6536\\u5230\\u7684\\u7528\\u6237\\u540D\\u662F:\", this.props.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(C, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n//类式组件写法：\n/* class C extends Component {\r\n    //声明接收context，不然获取不了。\r\n    static contextType=MyContext\r\n    render() {\r\n      console.log(this.context);\r\n      const {age,username}=this.context\r\n      return (\r\n        <div>\r\n            <h3>我是C组件</h3>\r\n            <h4>我从A组件接收到的用户名是:{username},年龄是：{age}</h4>\r\n           \r\n        </div>\r\n      )\r\n    }\r\n} */\n\n//函数式组件写法：\nfunction C() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u6211\\u662FC\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u6211\\u4ECEA\\u7EC4\\u4EF6\\u63A5\\u6536\\u5230\\u7684\\u7528\\u6237\\u540D\\u662F:\", username, \",\\u5E74\\u9F84\\u662F\\uFF1A\", age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c = C;\nvar _c;\n$RefreshReg$(_c, \"C\");","map":{"version":3,"names":["React","Component","createContext","jsxDEV","_jsxDEV","MyContext","Provider","Consumer","A","constructor","args","state","username","age","render","children","fileName","_jsxFileName","lineNumber","columnNumber","value","B","console","log","context","props","C","_c","$RefreshReg$"],"sources":["E:/react_extension/src/components/5_Context/index.jsx"],"sourcesContent":["import React, { Component,createContext } from 'react'\r\n\r\n//创建context对象\r\nconst MyContext=createContext()\r\nconst {Provider,Consumer} = MyContext\r\nexport default class A extends Component {\r\n\r\n    state={username:'tom',age:18}\r\n\r\n  render() {\r\n    const {username,age}=this.state\r\n    return (\r\n      <div>\r\n        <h3>我是A组件</h3>\r\n        <h4>我的用户名是：{username}</h4>\r\n        {/* Provider可以接收多个键值对，对象也可以。 */}\r\n        <Provider value={{username,age}}>\r\n            <B/>\r\n        </Provider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass B extends Component {\r\n    render() {\r\n        //对比组件C,因为没有声明接收context，所以获取不了context的内容，只能返回一个空对象，\r\n        // 而且A与B是父子关系，用props就可以进行传值，没必要用context,context用于祖组件和后代组件通信（隔代通信）\r\n        console.log(this.context);\r\n      return (\r\n        <div>\r\n            <h3>我是B组件</h3>\r\n            <h4>我从A组件接收到的用户名是:{this.props.username}</h4>\r\n            <C/>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\n//类式组件写法：\r\n/* class C extends Component {\r\n    //声明接收context，不然获取不了。\r\n    static contextType=MyContext\r\n    render() {\r\n      console.log(this.context);\r\n      const {age,username}=this.context\r\n      return (\r\n        <div>\r\n            <h3>我是C组件</h3>\r\n            <h4>我从A组件接收到的用户名是:{username},年龄是：{age}</h4>\r\n           \r\n        </div>\r\n      )\r\n    }\r\n} */\r\n\r\n//函数式组件写法：\r\nfunction C(){\r\n   return (\r\n        <div>\r\n            <h3>我是C组件</h3>\r\n            <h4>我从A组件接收到的用户名是:{username},年龄是：{age}</h4>\r\n           \r\n        </div>\r\n    )  \r\n    \r\n}\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,aAAa,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,gBAACH,aAAa,CAAC,CAAC;AAC/B,MAAM;EAACI,QAAQ;EAACC;AAAQ,CAAC,GAAGF,SAAS;AACrC,eAAe,MAAMG,CAAC,SAASP,SAAS,CAAC;EAAAQ,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAErCC,KAAK,GAAC;MAACC,QAAQ,EAAC,KAAK;MAACC,GAAG,EAAC;IAAE,CAAC;EAAA;EAE/BC,MAAMA,CAAA,EAAG;IACP,MAAM;MAACF,QAAQ;MAACC;IAAG,CAAC,GAAC,IAAI,CAACF,KAAK;IAC/B,oBACEP,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdf,OAAA;QAAAW,QAAA,GAAI,4CAAO,EAACH,QAAQ;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAE1Bf,OAAA,CAACE,QAAQ;QAACc,KAAK,EAAE;UAACR,QAAQ;UAACC;QAAG,CAAE;QAAAE,QAAA,eAC5BX,OAAA,CAACiB,CAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEV;AACF;AAEA,MAAME,CAAC,SAASpB,SAAS,CAAC;EACtBa,MAAMA,CAAA,EAAG;IACL;IACA;IACAQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC;IAC3B,oBACEpB,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdf,OAAA;QAAAW,QAAA,GAAI,4EAAc,EAAC,IAAI,CAACU,KAAK,CAACb,QAAQ;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5Cf,OAAA,CAACsB,CAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASO,CAACA,CAAA,EAAE;EACT,oBACKtB,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdf,OAAA;MAAAW,QAAA,GAAI,4EAAc,EAACH,QAAQ,EAAC,2BAAK,EAACC,GAAG;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1C,CAAC;AAGd;AAACQ,EAAA,GATQD,CAAC;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}